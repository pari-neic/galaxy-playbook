# Python 3 support
pip_virtualenv_command: /usr/bin/python3 -m virtualenv # usegalaxy_eu.certbot, usegalaxy_eu.tiaas2, galaxyproject.galaxy
certbot_virtualenv_package_name: python36-virtualenv # usegalaxy_eu.certbot
pip_package: python3-pip # geerlingguy.pip

# Galaxy
galaxy_create_user: false
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_root: /srv/galaxy
galaxy_log_dir: /var/log/galaxy

galaxy_user: { name: galaxy }
galaxy_config_style: yaml
galaxy_force_checkout: true
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"
miniconda_version: "4.6.14"
galaxy_instance_codename: "{{ env }}"
galaxy_file_path: /srv/galaxy/data/
__galaxy_dir_perms: '0755'

galaxy_config:
  galaxy:
    brand: "Nordic covid-19"
    admin_users: "{{ galaxy_admin }}"
    master_api: "{{ galaxy_master_api_key }}"
    enable_beta_gdpr: true
    enable_quotas: true
    database_connection: "{{ db_connection }}"
    file_path: "{{ galaxy_file_path }}"
    tool_data_path: "{{ galaxy_server_dir }}/tool-data"
    check_migrate_tools: false
#    tool_data_table_config_path: /cvmfs/data.galaxyproject.org/byhand/location/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/managed/location/tool_data_table_conf.xml
    tool_sheds_config_file: "{{ galaxy_config_dir }}/tool_sheds_conf.xml"
    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
    job_metrics_config_file: "{{ galaxy_config_dir }}/job_metrics_conf.xml"
    sanitize_whitelist_file: "{{ galaxy_mutable_config_dir }}/sanitize_whitelist.txt"
    interactivetools_enable: "True"
    interactivetools_map: "{{ gie_proxy_sessions_path }}"
    outputs_to_working_directory: True
    galaxy_infrastructure_url: "https://{{ galaxy_host }}/"
    log_level: INFO
    allow_path_paste: true
    require_login: false
    allow_user_creation: false
    allow_user_impersonation: true
    smtp_server: "localhost"
    email_from: "galaxy-no-reply@{{ galaxy_host }}"
    error_email_to: admin@usegalaxy.no

    welcome_url: static/welcome.html
    support_url: https://elixir.no/helpdesk
    terms_url: https://{{galaxy_host}}/galaxy-terms/
    statsd_host: localhost
    statsd_influxdb: true
    statsd_prefix: "galaxy_page_timings"
    id_secret: "{{galaxy_id_secret}}"

    message_box_visible: false
    message_box_class: warning
    message_box_content: The usegalaxy.no is still undergoing testing but we will be live Oct 21st 2020.  Not for production use!
    container_image_cache_path: /srv/galaxy/containers
    enable_mulled_containers: true
#    containers_resolvers_config_file: "{{ galaxy_config_dir }}/container_resolvers_conf.xml"
#    dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
#    conda_ensure_channels: iuc,conda-forge,bioconda,defaults,https://galaxy-ntnu.bioinfo.no/nelsconda/

    nginx_x_accel_redirect_base: "/_x_accel_redirect"

  uwsgi:
    # Default values
    socket: 127.0.0.1:8080
    buffer-size: 16384
    processes: 4
    threads: 4
    offload-threads: 2
    stats-push: statsd:127.0.0.1:8125
    static-map:
      - /static/style={{ galaxy_server_dir }}/static/style/blue/
      - /static={{ galaxy_server_dir }}/static
    master: true
    virtualenv: "{{ galaxy_venv_dir }}"
    pythonpath: "{{ galaxy_server_dir }}/lib"
    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
    thunder-lock: true
    die-on-term: true
    hook-master-start:
      - unix_signal:2 gracefully_kill_them_all
      - unix_signal:15 gracefully_kill_them_all
    py-call-osafterfork: true
    enable-threads: true
    # Our additions
    mule:
      - lib/galaxy/main.py
      - lib/galaxy/main.py
    farm: job-handlers:1,2

galaxy_systemd_zergling_env: "DRMAA_LIBRARY_PATH=/usr/lib64/libdrmaa.so.1"

galaxy_singularity_images_cvmfs_path: "/cvmfs/singularity.galaxyproject.org/all/"
galaxy_handler_count: "{{ galaxy_systemd_handlers }}"
pulsar_rabbitmq_proxy: "{{ groups['database'][0] }}"

galaxy_config_files:
  - src: files/galaxy/config/job_metrics_conf.xml
    dest: "{{ galaxy_config['galaxy']['job_metrics_config_file'] }}"
  - src: files/galaxy/config/tool_conf_interactive.xml
    dest: "{{ galaxy_config_dir }}/tool_conf_interactive.xml"
  - src: files/galaxy/tools/sanitize_whitelist.txt
    dest: "{{ galaxy_mutable_config_dir }}/sanitize_whitelist.txt"
  - src: files/galaxy/tools/interactive/interactivetool_jupyter_notebook.xml
    dest: "{{ galaxy_server_dir }}/tools/interactive/interactivetool_jupyter_notebook.xml"
  - src: files/galaxy/config/dependency_resolvers_conf.xml
    dest: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
  - src: files/galaxy/config/tool_sheds_conf.xml
    dest: "{{ galaxy_config_dir }}/tool_sheds_conf.xml"

galaxy_tool_config_files:
  - "{{ galaxy_config_dir }}/tool_conf.xml"
  - "{{ galaxy_config_dir }}/tool_conf_interactive.xml"

galaxy_config_templates:
  - src: files/galaxy/config/tool_conf.xml
    dest: "{{ galaxy_config_dir }}/tool_conf.xml"
  - src: templates/galaxy/config/job_conf.xml.j2
    dest: "{{ galaxy_config['galaxy']['job_config_file'] }}"
  - src: templates/galaxy/config/reports.yml
    dest: "{{ galaxy_config_dir }}/reports.yml"
  - src: templates/galaxy/config/pulsar_app.yml.j2
    dest: "{{ galaxy_config_dir }}/pulsar_app.yml"
  - src: templates/galaxy/config/container_resolvers_conf.xml.j2
    dest: "{{ galaxy_config_dir }}/container_resolvers_conf.xml"
  - src: templates/galaxy/config/container_resolvers_conf.xml.j2
    dest: "{{ galaxy_config_dir }}/container_resolvers_conf.xml"

galaxy_dynamic_job_rules_src_dir: files/galaxy/dynamic_rules
galaxy_dynamic_job_rules_dir: "{{ galaxy_root }}/dynamic_rules"
galaxy_dynamic_job_rules:
  - usegalaxy/joint_destinations.yaml
  - usegalaxy/sorting_hat.py
  - usegalaxy/destination_specifications.yaml
  - usegalaxy/tool_destinations.yaml
  - readme.txt

# systemd
galaxy_systemd_mode: mule
galaxy_systemd_reports: true
galaxy_zergpool_listen_addr: 127.0.0.1:8080
galaxy_restart_handler_name: "Restart Galaxy"
galaxy_systemd_handlers: 8
galaxy_systemd_workflow_schedulers: 2

galaxy_selinux_web_access_dirs:
  - "{{ galaxy_server_dir }}/client/galaxy/images"
  - "{{ galaxy_server_dir }}/static"

# Interactive Tools
docker_install_compose: false
docker_users:
  - "{{ galaxy_user.name }}"
gie_proxy_dir: /srv/galaxy/gie-proxy/proxy
gie_proxy_git_version: ie2
gie_proxy_setup_nodejs: nodeenv
gie_proxy_virtulenv_command: "{{ pip_virtualenv_command }}"
gie_proxy_nodejs_version: "10.13.0"
gie_proxy_virtualenv: /srv/galaxy/gie-proxy/venv
gie_proxy_setup_service: systemd
gie_proxy_sessions_path: "{{ galaxy_mutable_data_dir }}/interactivetools_map.sqlite"

# Certbot
certbot_auto_renew_hour: "{{ 23 |random(seed=galaxy_host)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=galaxy_host)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - nginx
certbot_post_renewal: |
  systemctl restart nginx || true
certbot_domains:
  - "{{ galaxy_host }}"
certbot_agree_tos: --agree-tos

# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_enable_default_server: false
nginx_ssl_servers:
  - galaxy
nginx_conf_http:
  client_max_body_size: 1g
nginx_ssl_role: usegalaxy_eu.certbot
nginx_conf_ssl_certificate: /etc/letsencrypt/live/{{ galaxy_host }}/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/letsencrypt/live/{{ galaxy_host }}/privkey.pem

